trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: devdeploy
  variables:
    case : 01
    environment: dev
  jobs:
  - job: devdeployjob
    steps:
    - bash: echo Build devdeployjob
    - bash: echo $(PipelineLevelVariable)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourcesDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: java -version
    - bash: node --version
    - bash: python --version 
    - bash: mvn -version 
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'System.DefaultWorkingDirectory'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: 'Build.ArtifactStagingDirectory'
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'




# - script: |
#     echo $(case)deploy
#     echo $(environment)
#   displayName: 'Run a one-line script first'
# - stage: QAdeploy
#   variables:
#     case : 02
#     environment: QA
#   dependsOn: devdeploy
#   jobs:
#   - job: QAdeployjob
#     steps:
#     - script: |
#         echo $(case)deploy
#         echo $(environment)
#       displayName: 'Run a one-line script first'
# - stage: proddeploy
#   variables:
#     case : 03
#     environment: prod
#   dependsOn: QAdeploy
#   jobs:
#   - job: proddeployjob
#     steps: 
#     - script: |
#         echo $(case)deploy
#         echo $(environment)
#       displayName: 'Run a one-line script first'


